app.title=Подсчет калорий
app.footer=Приложение по проекту <a href="https://github.com/chumakig86/topjava" target=_blank>Maven/ Spring/ Security/ JPA(Hibernate)/ Jackson/jQuery</a>
app.enter=Войти как
app.profile=профиль
app.register=Регистрирация
app.registered=Вы зарегистрированы. Введите ваш логин/пароль.

user.title=Пользователи
user.edit=Редактирование пользователя
user.add=Добавление пользователя
user.name=Имя
user.email=Почта
user.roles=Роли
user.active=Активный
user.registered=Зарегистрирован
user.password=Пароль
user.caloriesPerDay=Норма калорий в день

userTo.name=Имя
userTo.email=Почта
userTo.password=Пароль
userTo.caloriesPerDay=Норма калорий в день

meal.title=Моя еда
app.technology=Стек технологий
app.text=проект с регистрацией/авторизацией и интерфейсом на основе ролей (USER, ADMIN). Администратор может создавать/редактировать/удалять пользователей, а пользователь - управлять своим профилем и данными (день, еда, калории) через UI (по AJAX) и по REST интерфейсу с базовой авторизацией. Возможна фильтрация данных по датам и времени, при этом цвет записи таблицы еды зависит от того, превышает ли сумма калорий за день норму (редактируемый параметр в профиле пользователя). Весь REST интерфейс покрывается JUnit тестами, используя Spring MVC Test и Spring Security Test.
meal.edit=Редактирование еды
meal.add=Добавление еды
meal.startDate=От даты
meal.endDate=До даты
meal.startTime=От времени
meal.endTime=До времени
meal.description=Описание
meal.dateTime=Дата/Время
meal.calories=Калории

common.add=Добавить
common.select=Выбрать
common.deleted=Запись удалена
common.saved=Запись сохранена
common.enabled=Запись активирована
common.disabled=Запись деактивирована
common.search=Искать

error.appError=Ошибка приложения
error.dataNotFound=Данные не найдены
error.dataError=Ошибка в данных
error.validationError=Ошибка формата данных

exception.common.notFound=Не найдена запись с {0}
exception.user.duplicateEmail=Пользователь с такой почтой уже есть в приложении
exception.user.modificationRestriction=Модификация Admin/User запрещена
exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем

NotEmpty=Поле "{0}" не должно быть пустым
NotBlank=Поле "{0}" не должно быть пустым
NotNull=Поле "{0}" не должно быть пустым
Email=Неверный формат поля "{0}"
Range=Поле "{0}" должно быть между {2} и {1}
Length=Длина поля "{0}" должна быть между {2} и {1}
Size=Размер поля "{0}" должен быть между {2} и {1}
SafeHtml=Поле "{0}" может содержать небезопасный html контент

AbstractAccessDecisionManager.accessDenied=\u0414\u043E\u0441\u0442\u0443\u043F \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D
AbstractLdapAuthenticationProvider.emptyPassword=\u041F\u0443\u0441\u0442\u043E\u0439 \u043F\u0430\u0440\u043E\u043B\u044C
AbstractSecurityInterceptor.authenticationNotFound=\u041E\u0431\u044A\u0435\u043A\u0442 Authentication \u0432 SecurityContext \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D 
AbstractUserDetailsAuthenticationProvider.badCredentials=\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0443\u0447\u0435\u0442\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
AbstractUserDetailsAuthenticationProvider.credentialsExpired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
AbstractUserDetailsAuthenticationProvider.disabled=\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D
AbstractUserDetailsAuthenticationProvider.expired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u043E\u0439 \u0437\u0430\u043F\u0438\u0441\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
AbstractUserDetailsAuthenticationProvider.locked=\u0423\u0447\u0435\u0442\u043D\u0430\u044F \u0437\u0430\u043F\u0438\u0441\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0437\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D\u0430
AbstractUserDetailsAuthenticationProvider.onlySupports=\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F \u0442\u043E\u043B\u044C\u043A\u043E UsernamePasswordAuthenticationToken
AccountStatusUserDetailsChecker.credentialsExpired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
AccountStatusUserDetailsChecker.disabled=\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D
AccountStatusUserDetailsChecker.expired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u043E\u0439 \u0437\u0430\u043F\u0438\u0441\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
AccountStatusUserDetailsChecker.locked=\u0423\u0447\u0435\u0442\u043D\u0430\u044F \u0437\u0430\u043F\u0438\u0441\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0437\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D\u0430
AclEntryAfterInvocationProvider.noPermission=Authentication {0} \u041D\u0415 \u0438\u043C\u0435\u0435\u0442 \u043F\u0440\u0430\u0432 \u0434\u043E\u0441\u0442\u0443\u043F\u0430 \u043A \u0434\u043E\u043C\u0435\u043D\u043D\u043E\u043C\u0443 \u043E\u0431\u044A\u0435\u043A\u0442\u0443 {1}
AnonymousAuthenticationProvider.incorrectKey=\u041F\u0440\u0435\u0434\u044A\u044F\u0432\u043B\u0435\u043D\u043D\u044B\u0439 AnonymousAuthenticationToken \u043D\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u043E\u0436\u0438\u0434\u0430\u0435\u043C\u043E\u0433\u043E \u043A\u043B\u044E\u0447\u0430
BindAuthenticator.badCredentials=\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0443\u0447\u0435\u0442\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
BindAuthenticator.emptyPassword=\u041F\u0443\u0441\u0442\u043E\u0439 \u043F\u0430\u0440\u043E\u043B\u044C
CasAuthenticationProvider.incorrectKey=\u041F\u0440\u0435\u0434\u044A\u044F\u0432\u043B\u0435\u043D\u043D\u044B\u0439 CasAuthenticationToken \u043D\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u043E\u0436\u0438\u0434\u0430\u0435\u043C\u043E\u0433\u043E \u043A\u043B\u044E\u0447\u0430
CasAuthenticationProvider.noServiceTicket=\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0434\u043B\u044F \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0438 \u0442\u0438\u043A\u0435\u0442 \u0441\u043B\u0443\u0436\u0431\u044B CAS
ConcurrentSessionControlAuthenticationStrategy.exceededAllowed=\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0441\u0435\u0441\u0441\u0438\u0439 {0} \u0434\u043B\u044F \u0434\u0430\u043D\u043D\u043E\u0433\u043E \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0430\u043B\u0430 \u043F\u0440\u0435\u0432\u044B\u0448\u0435\u043D\u043E
DigestAuthenticationFilter.incorrectRealm=\u0418\u043C\u044F \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0432 \u043E\u0442\u0432\u0435\u0442\u0435 {0} \u043D\u0435 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0435\u0442 \u0441 \u0438\u043C\u0435\u043D\u0435\u043C \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0435 {1}
DigestAuthenticationFilter.incorrectResponse=\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442
DigestAuthenticationFilter.missingAuth=\u041E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u0430\u0439\u0434\u0436\u0435\u0441\u0442\u0430 \u0434\u043B\u044F 'auth' QOP; \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0439 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A {0}
DigestAuthenticationFilter.missingMandatory=\u041E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u0430\u0439\u0434\u0436\u0435\u0441\u0442\u0430; \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0439 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u043A {0}
DigestAuthenticationFilter.nonceCompromised=\u0422\u043E\u043A\u0435\u043D nonce-\u043A\u043E\u0434\u0430 \u0441\u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D {0}
DigestAuthenticationFilter.nonceEncoding=Nonce-\u043A\u043E\u0434 \u043D\u0435 \u0437\u0430\u043A\u043E\u0434\u0438\u0440\u043E\u0432\u0430\u043D \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E Base64; \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0439 nonce-\u043A\u043E\u0434 {0}
DigestAuthenticationFilter.nonceExpired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F nonce-\u043A\u043E\u0434\u0430 \u0438\u0441\u0442\u0435\u043A/\u043F\u0440\u0435\u0432\u044B\u0448\u0435\u043D
DigestAuthenticationFilter.nonceNotNumeric=\u0422\u043E\u043A\u0435\u043D nonce-\u043A\u043E\u0434\u0430 \u0434\u043E\u043B\u0436\u0435\u043D \u043D\u0430\u0447\u0438\u043D\u0430\u0442\u044C\u0441\u044F \u0441 \u0447\u0438\u0441\u043B\u043E\u0432\u043E\u0433\u043E \u0442\u043E\u043A\u0435\u043D\u0430, \u043D\u043E \u043F\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\: {0}
DigestAuthenticationFilter.nonceNotTwoTokens=Nonce-\u043A\u043E\u0434 \u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0441\u0442\u043E\u044F\u0442\u044C \u0438\u0437 \u0434\u0432\u0443\u0445 \u0442\u043E\u043A\u0435\u043D\u043E\u0432, \u043D\u043E \u043F\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 {0}
DigestAuthenticationFilter.usernameNotFound=\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F {0} \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E
JdbcDaoImpl.noAuthority=\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C {0} \u043D\u0435 \u043E\u0431\u043B\u0430\u0434\u0430\u0435\u0442 GrantedAuthority
JdbcDaoImpl.notFound=\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C {0} \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D
LdapAuthenticationProvider.badCredentials=\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0443\u0447\u0435\u0442\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
LdapAuthenticationProvider.credentialsExpired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
LdapAuthenticationProvider.disabled=\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D
LdapAuthenticationProvider.expired=\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u043E\u0439 \u0437\u0430\u043F\u0438\u0441\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0438\u0441\u0442\u0435\u043A
LdapAuthenticationProvider.locked=\u0423\u0447\u0435\u0442\u043D\u0430\u044F \u0437\u0430\u043F\u0438\u0441\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0437\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D\u0430
LdapAuthenticationProvider.emptyUsername=\u041F\u0443\u0441\u0442\u043E\u0435 \u0438\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E
LdapAuthenticationProvider.onlySupports=\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F \u0442\u043E\u043B\u044C\u043A\u043E UsernamePasswordAuthenticationToken
PasswordComparisonAuthenticator.badCredentials=\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0443\u0447\u0435\u0442\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F
#PersistentTokenBasedRememberMeServices.cookieStolen=\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0435 \u043D\u0435\u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0442\u043E\u043A\u0435\u043D\u0430 remember-me (Series/token). \u0412\u043E\u0437\u043C\u043E\u0436\u043D\u0430\u044F \u0430\u0442\u0430\u043A\u0430 \u043F\u0443\u0442\u0435\u043C \u043A\u0440\u0430\u0436\u0438 \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E \u043A\u0443\u043A\u0438.
ProviderManager.providerNotFound=\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D AuthenticationProvider \u0434\u043B\u044F {0}
RememberMeAuthenticationProvider.incorrectKey=\u041F\u0440\u0435\u0434\u044A\u044F\u0432\u043B\u0435\u043D\u043D\u044B\u0439 RememberMeAuthenticationToken \u043D\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u043E\u0436\u0438\u0434\u0430\u0435\u043C\u043E\u0433\u043E \u043A\u043B\u044E\u0447\u0430
RunAsImplAuthenticationProvider.incorrectKey=\u041F\u0440\u0435\u0434\u044A\u044F\u0432\u043B\u0435\u043D\u043D\u044B\u0439 RunAsUserToken \u043D\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u043E\u0436\u0438\u0434\u0430\u0435\u043C\u043E\u0433\u043E \u043A\u043B\u044E\u0447\u0430
SubjectDnX509PrincipalExtractor.noMatching=\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0439 \u043F\u0430\u0442\u0442\u0435\u0440\u043D \u0432 subjectDN\: {0}
SwitchUserFilter.noCurrentUser=\u041E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C, \u0430\u0441\u0441\u043E\u0446\u0438\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C \u0437\u0430\u043F\u0440\u043E\u0441\u043E\u043C
SwitchUserFilter.noOriginalAuthentication=\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0438\u0441\u0445\u043E\u0434\u043D\u044B\u0439 \u043E\u0431\u044A\u0435\u043A\u0442 Authentication